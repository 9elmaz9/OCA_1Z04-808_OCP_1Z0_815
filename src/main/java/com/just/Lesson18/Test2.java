package com.just.Lesson18;

public class Test2 {
    public static void main(String[] args) {
        ///ЭТАПЫ СОЗЖАНИЯ МАССИВА
        //СТАТИЧЕСКАЯ
        // double[] array7;
        // array7 = new double[2];

//exta info
        int[] array12, a; // значит что array12 и a  массивы, потому что [] стоит до имени
        int b[], c; // тут мы уже говорим компилятору, что b [] это массив, а c это просто целое число
        c = 5;
        int[] d, e[][]; // [] d одномерный массив, а e[][][] трехмерный массив, потому что к е относятся все квадратные скобки , все три

        int d1[] , e1[][]; //но если так то d1[]будет одномерный, а  e1[][]двумерный


        //ДИНАМИЧЕСКАЯ РЕАЛИЗАЦИЯ

        String[] array1;
        int[][] array2;

        array1 = new String[3];
        array2 = new int[3][]; // три одномерных массива длинны которых разные

        for (int i = 0; i < array1.length; i++) {   // i меньше длинны массива
            //назначаем элементы определенным значением
            array1[i] = "privet" + i;  // нулевой i
            System.out.println(array1[i]);
            //privet0
            //privet1
            //privet2
        }


        // Для array2, мы должны знать длину одномерных массивов. Поэтому задаем им эту длину
        // Allocation
        array2[0] = new int[5];
        array2[1] = new int[2];
        array2[2] = new int[7];

        //первый  for будет гонять нас по строкам
        //              0<3  go to the next for
        for (int i = 0; i < array2.length; i++) {  // у нас length 3
            //этот for  будет гонять нас по строкам
            //              0< 1st  одномерного массива, который у нас равен 5 , тогда идем дальше
            for (int j = 0; j < array2[i].length; j++) {
                //присваиваем значения
                array2[i][j] = i + j;
                System.out.println(array2[i][j]);
                //0
                //1
                //2
                //3
                //4
                //1
                //2
                //2
                //3
                //4
                //5
                //6
                //7
                //8

                //How it happened?
                // i=0 j=0   j<5  , 5 это длина нашего первого одномерного массива , и поэтому 0 идет в наш массив как первый элемент и останавливается на 4 , наш массив заполнен Ю
                //теперь мы переходим на заполнение нашего второго массива с вместимостью 2 элемента
                // i=1  j=0 и заполняем наш массив с 1  дальше 2 и стоп
                //переходим на заполнение нашего след массива с размером на 7 элементов
                //i=2 и j=0 , начинаем заполнять с цифры 2 , то есть значения i


                //СМЕШАННЫЕ ВАРИАНТЫ СОЗДАНИЯ МАССИВА

                // 1
                int[] array8 = new int[7];  // 7 элементов массива будут равны 0 , инициализация не происзодит на саммом деле
                // declaration   allocation

                //2
                //тут обледенены три шага  declaration   allocation  и initialization
                int[] array9 = {1, 2, 3,}; // в фигурных скобках сразу запишем какие элементы будут содержаться в этом массиве , тут нигде мы не отмечаем длину массива, java сама считает


                //3
                int[] array10;
                array10 = new int[]{1, 2, 3};

                //CAN'T
                // int[] array10;
                // array10 = {1,2,3};   можно int[] array9 = {1, 2, 3,}; или   array10 = new int[]{1, 2, 3} OR int[] array11 = new int[]{1, 2, 3};


                //4
                int[] array11 = new int[]{1, 2, 3};

                // CAN'T
                // int[] array11 = new int [3] {1,2,3};

            }

        }


    }
}
